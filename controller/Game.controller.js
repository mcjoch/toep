"use strict";sap.ui.define(["sap/ui/model/json/JSONModel","./BaseController","../util/game/Game","sap/ui/core/Fragment","../util/SoundManager"],function(e,t,o,n,s){"use strict";function a(e){return e&&e.__esModule&&typeof e.default!=="undefined"?e.default:e}const i=a(t);const r=a(o);const c=s["SoundManager"];const g=i.extend("com.game.toep.controller.Game",{constructor:function e(){i.prototype.constructor.apply(this,arguments);this.onRouteMatched=e=>{const t=e.getParameter("arguments");this.setupNewGame(t.level);c.playMusic("gameplay")};this.setupNewGame=e=>{const t=new r(this);const o=this.getConfig().getProperty("/levels/"+String(e-1));t.setup(o);const n=this.getModel("game");n.setProperty("/",t);t.startGame()};this.onSelectCard=e=>{const t=e.getSource();const o=t.getBindingContext("game");const n=o.getObject();const s=this.getModel("game").getProperty("/");s.humanPlayer?.cardPicked(n)};this.openWinnerDialog=async()=>{this.endGameDialog??=await n.load({id:this.getView().getId(),name:"com.game.toep.view.EndGameDialog",controller:this});this.getView().addDependent(this.endGameDialog);this.endGameDialog.open()};this.onStartNewGame=()=>{const e=this.getModel("game").getProperty("/");this.setupNewGame(e.levelConfig.key);this.endGameDialog.close()};this.onExitGame=()=>{this.getRouter().navTo("selectlevel");this.endGameDialog.close()}},onInit:function t(){this.getRouter().getRoute("game").attachPatternMatched(this.onRouteMatched,this);const o=new e({});this.setModel(o,"game")},modelRefresh:function e(){this.getModel("game").refresh()}});return g});
//# sourceMappingURL=Game.controller.js.map