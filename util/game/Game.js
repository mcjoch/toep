"use strict";sap.ui.define(["../StorageManager","./AIPlayer","./Deck","./HumanPlayer","./Trick","../SoundManager"],function(e,t,i,r,s,n){"use strict";function a(e){return e&&e.__esModule&&typeof e.default!=="undefined"?e.default:e}const h=e["StorageManager"];const o=a(t);const l=a(i);const c=a(r);const u=a(s);const d=n["SoundManager"];class m{constructor(e){this.controller=e;this.players=[];this.deck=new l;this.deck.shuffle();this.cardsPlayed=[];this.discardPile=[];this.coinSummary=[];this.waitTime=4e3}setup(e){this.levelConfig=e;const t=new c(1);this.humanPlayer=t;this.coinsPaid=e.minimumBet;this.players.push(t);e.AIs.forEach(e=>{this.players.push(new o(e))});h.setCoins(h.getCoins()-e.minimumBet);this.coins=e.minimumBet*this.players.length;for(let e=0;e<4;e++){this.players.forEach(e=>{e.dealCard(this.deck.takeCard())})}}refreshViewModel(){this.controller.modelRefresh()}getRemainingPlayers(){return this.players.filter(e=>!e.hasFolded())}startGame(){this.currentTrick=new u(1,this);this.setCurrentPlayer(this.getRandomPlayer());return new Promise(e=>{this.resolveGameEnded=e})}setCurrentPlayer(e){this.currentPlayer=e;if(e.hasFolded()){this.endTurn();return}this.currentPlayer.pickCardToPlay(this.currentTrick).then(e=>{this.playCard(e)}).catch(e=>{console.error("Error picking card to play:",e)})}playCard(e){if(!this.isSimulation()){d.playCardSound()}this.currentTrick.addCard(e);this.endTurn()}endTurn(){if(this.currentTrick.cardsPlayed.length===this.getRemainingPlayers().length){this.currentTrick.markWinner();this.refreshViewModel();setTimeout(()=>{this.endTrick();this.refreshViewModel()},this.waitTime)}else{this.setCurrentPlayer(this.getNextPlayer());this.refreshViewModel()}}endTrick(){if(this.currentTrick.no===4){this.endGame();return}const e=this.currentTrick.getWinner();this.players.forEach(e=>{e.setWinner(false)});this.currentTrick=new u(this.currentTrick.no+1,this);this.setCurrentPlayer(e)}endGame(){const e=this.currentTrick.getWinner();if(!this.isSimulation()){this.winner=e;this.coinSummary.push({label:"Former total",coins:h.getCoins()+this.coinsPaid});this.coinSummary.push({label:"Bet",coins:-this.coinsPaid});if(e instanceof c){this.coinSummary.push({label:"Winnings",coins:this.coins});h.setCoins(h.getCoins()+this.coins)}this.coinSummary.push({label:"New Total",coins:h.getCoins()});this.controller.openWinnerDialog()}this.resolveGameEnded(e)}getRandomPlayer(){return this.players[Math.floor(Math.random()*this.players.length)]}getNextPlayer(){const e=this.players.indexOf(this.currentPlayer);return this.players[(e+1)%this.players.length]}isSimulation(){return this.simulation}}return m});
//# sourceMappingURL=Game.js.map